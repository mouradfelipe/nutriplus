{"ast":null,"code":"var _jsxFileName = \"/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/components/FoodSuggestions/Refeicao.jsx\";\nimport React, { Component } from \"react\";\nimport { Table, Segment, Button, Icon, Input } from \"semantic-ui-react\";\nconst refeicaoMap = {\n  0: \"Café da manhã\",\n  1: \"Lanche da manhã\",\n  2: \"Almoço\",\n  3: \"Lanche da tarde\",\n  4: \"Jantar\",\n  5: \"Lanche da noite\"\n};\nconst foodmap = {\n  sushi: {\n    proteinas: 10,\n    gorduras: 50\n  },\n  abacaxi: {\n    proteinas: 1,\n    gorduras: 5\n  },\n  pimentao: {\n    proteinas: 0,\n    gorduras: 40\n  }\n};\n\nclass Refeicao extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Disponiveis: [],\n      Cardapio: []\n    };\n\n    this.componentWillMount = () => {\n      this.setState({\n        Disponiveis: this.comidas_restantes(this.props.COMIDAS, this.props.cardapios[this.props.refeicao]),\n        Cardapio: this.props.cardapios[this.props.refeicao],\n        valorNutricional: this.calcula_VN(this.props.cardapios[this.props.refeicao]),\n        factors: this.props.factors[this.props.refeicao]\n      });\n    };\n\n    this.comidas_restantes = (comidas, cardapio) => {\n      cardapio.map(comida => {\n        var index = comidas.indexOf(comida);\n\n        if (index > -1) {\n          comidas.splice(index, 1);\n        }\n      });\n      return comidas;\n    };\n\n    this.calcula_VN = cardapio => {\n      let valorNutricional;\n      let factors = this.props.factors[this.props.refeicao];\n      let atributos = this.props.atributos;\n      atributos.map(atributo => {\n        let vn_val = 0;\n        cardapio.map(comida => {\n          vn_val = vn_val + foodmap[comida][atributo] * factors[comida];\n        });\n        let vn = [atributo, vn_val];\n        if (valorNutricional) valorNutricional = [valorNutricional, vn];else valorNutricional = vn;\n      });\n      return valorNutricional;\n    };\n\n    this.calcula_VNs_i = (cardapio, index) => {\n      let valorNutricional;\n      let factors = this.props.factors[index];\n      let atributos = this.props.atributos;\n      atributos.map(atributo => {\n        let vn_val = 0;\n        cardapio.map(comida => {\n          vn_val = vn_val + foodmap[comida][atributo] * factors[comida];\n        });\n        let vn = [atributo, vn_val];\n        if (valorNutricional) valorNutricional = [valorNutricional, vn];else valorNutricional = vn;\n      });\n      return valorNutricional;\n    };\n\n    this.calcula_VNs = cardapios => {\n      let valorNutricional;\n      cardapios.map((cardapio, index) => {\n        if (valorNutricional) valorNutricional = this.somaAtributos(valorNutricional, this.calcula_VNs_i(cardapio, index));else valorNutricional = this.calcula_VNs_i(cardapio, index);\n      });\n      this.props.handleInfos(valorNutricional);\n    };\n\n    this.somaAtributos = (valorNutricional1, valorNutricional2) => {\n      for (let i = 0; i < this.props.atributos.length; i++) {\n        valorNutricional1[i][1] = valorNutricional1[i][1] + valorNutricional2[i][1];\n      }\n\n      return valorNutricional1;\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.refeicao !== this.props.refeicao) {\n        this.setState({\n          Disponiveis: this.comidas_restantes(this.props.COMIDAS, this.props.cardapios[this.props.refeicao]),\n          Cardapio: this.props.cardapios[this.props.refeicao],\n          valorNutricional: this.calcula_VN(this.props.cardapios[this.props.refeicao]),\n          factors: this.props.factors[this.props.refeicao]\n        });\n      }\n    };\n\n    this.handleCardapio = cardapio => {\n      this.setState({\n        valorNutricional: this.calcula_VN(cardapio)\n      });\n    };\n\n    this.generateTable = () => {\n      let Disponiveis = this.state.Disponiveis;\n      let Cardapio = this.state.Cardapio;\n\n      if (Disponiveis || Cardapio) {\n        let TableDisponiveis = Disponiveis.map(moeda => {\n          return React.createElement(Segment.Group, {\n            compact: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(Segment, {\n            inverted: true,\n            color: \"green\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, moeda)), React.createElement(Button.Group, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(Button, {\n            disabled: true,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"angle double left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          })), React.createElement(Button, {\n            name: moeda,\n            type: \"Ativo\",\n            onClick: this.handleItemClick,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"angle double right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }))));\n        });\n        let TableCardapio = Cardapio.map(moeda => {\n          return React.createElement(Segment.Group, {\n            compact: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, React.createElement(Segment, {\n            inverted: true,\n            color: \"blue\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, React.createElement(\"center\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, moeda)), React.createElement(Button.Group, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, React.createElement(Button, {\n            name: moeda,\n            type: \"Passivo\",\n            onClick: this.handleItemClick,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"angle double left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          })), React.createElement(Button, {\n            disabled: true,\n            icon: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"angle double right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176\n            },\n            __self: this\n          }))));\n        });\n        let tabela = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \" \", React.createElement(Table, {\n          collapsing: true,\n          celled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          width: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"Alimentos dispon\\xEDveis\")), React.createElement(Table.HeaderCell, {\n          width: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \"Card\\xE1pio\")))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(Table.Row, {\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, TableDisponiveis), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, TableCardapio)))));\n        return tabela;\n      } else return null;\n    };\n\n    this.handleItemClick = (e, {\n      direction,\n      name,\n      type\n    }) => {\n      let Disponiveis = this.state.Disponiveis;\n      let Cardapio = this.state.Cardapio;\n\n      if (type === \"Ativo\") {\n        Disponiveis.splice(Disponiveis.indexOf(name), 1);\n        Cardapio.push(name);\n        this.setState({\n          Disponiveis: Disponiveis,\n          Cardapio: Cardapio\n        });\n      }\n\n      if (type === \"Passivo\") {\n        Cardapio.splice(Cardapio.indexOf(name), 1);\n        Disponiveis.push(name);\n        this.setState({\n          Cardapio: Cardapio,\n          Disponiveis: Disponiveis\n        });\n      }\n\n      this.handleCardapio(Cardapio);\n      this.props.handleCardapios(this.state.refeicao, Cardapio);\n      this.calcula_VNs(this.props.cardapios);\n    };\n\n    this.generateChart = () => {\n      let valorNutricional = this.state.valorNutricional;\n      let content;\n\n      if (valorNutricional) {\n        content = valorNutricional.map(valor => {\n          return React.createElement(Table.Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, valor[0]), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, valor[1]));\n        });\n      }\n\n      let table = React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Infos locais\"), content));\n      return table;\n    };\n\n    this.searchFactor = comida => {\n      let factors = this.props.factors[this.props.refeicao];\n      return factors[comida];\n    };\n\n    this.setFactor = async (comida, event) => {\n      if (event) {\n        let factors = this.props.factors[this.props.refeicao]; //console.log(factors);\n\n        if (factors) {} else {\n          factors = {};\n        }\n\n        factors[comida] = event.target.value;\n        await new Promise(resolve => {\n          this.setState({\n            factors: factors\n          }, () => {\n            resolve();\n          });\n        });\n        this.handleCardapio(this.state.Cardapio);\n        this.props.handleFactors(this.props.refeicao, factors);\n        this.calcula_VNs(this.props.cardapios);\n      }\n    };\n\n    this.gerenateFactor = () => {\n      let cardapio = this.state.Cardapio;\n      let content;\n\n      if (cardapio) {\n        content = cardapio.map(comida => {\n          return React.createElement(Table.Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }, comida), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, React.createElement(Input, {\n            value: this.searchFactor(comida),\n            onChange: e => this.setFactor(comida, e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          })));\n        });\n      }\n\n      let table = React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Alimento\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Quantidade (por\\xE7\\xF5es)\"), content));\n      return table;\n    };\n  }\n\n  render() {\n    let tabela = this.generateTable();\n    let chart = this.generateChart();\n    let fator = this.gerenateFactor();\n    const refeicao = this.props.refeicao;\n\n    if (tabela) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, refeicaoMap[refeicao]), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, tabela), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, fator), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, chart));\n    } else return null;\n  }\n\n}\n\nexport default Refeicao;","map":{"version":3,"sources":["/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/components/FoodSuggestions/Refeicao.jsx"],"names":["React","Component","Table","Segment","Button","Icon","Input","refeicaoMap","foodmap","sushi","proteinas","gorduras","abacaxi","pimentao","Refeicao","state","Disponiveis","Cardapio","componentWillMount","setState","comidas_restantes","props","COMIDAS","cardapios","refeicao","valorNutricional","calcula_VN","factors","comidas","cardapio","map","comida","index","indexOf","splice","atributos","atributo","vn_val","vn","calcula_VNs_i","calcula_VNs","somaAtributos","handleInfos","valorNutricional1","valorNutricional2","i","length","componentDidUpdate","prevProps","handleCardapio","generateTable","TableDisponiveis","moeda","handleItemClick","TableCardapio","tabela","e","direction","name","type","push","handleCardapios","generateChart","content","valor","table","searchFactor","setFactor","event","target","value","Promise","resolve","handleFactors","gerenateFactor","render","chart","fator"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Segment, Button, Icon, Input } from \"semantic-ui-react\";\n\nconst refeicaoMap = {\n  0: \"Café da manhã\",\n  1: \"Lanche da manhã\",\n  2: \"Almoço\",\n  3: \"Lanche da tarde\",\n  4: \"Jantar\",\n  5: \"Lanche da noite\"\n};\n\nconst foodmap = {\n  sushi: {\n    proteinas: 10,\n    gorduras: 50\n  },\n  abacaxi: {\n    proteinas: 1,\n    gorduras: 5\n  },\n  pimentao: {\n    proteinas: 0,\n    gorduras: 40\n  }\n};\n\nclass Refeicao extends Component {\n  state = {\n    Disponiveis: [],\n    Cardapio: []\n  };\n\n  componentWillMount = () => {\n    this.setState({\n      Disponiveis: this.comidas_restantes(\n        this.props.COMIDAS,\n        this.props.cardapios[this.props.refeicao]\n      ),\n      Cardapio: this.props.cardapios[this.props.refeicao],\n      valorNutricional: this.calcula_VN(\n        this.props.cardapios[this.props.refeicao]\n      ),\n      factors: this.props.factors[this.props.refeicao]\n    });\n  };\n\n  comidas_restantes = (comidas, cardapio) => {\n    cardapio.map(comida => {\n      var index = comidas.indexOf(comida);\n      if (index > -1) {\n        comidas.splice(index, 1);\n      }\n    });\n    return comidas;\n  };\n\n  calcula_VN = cardapio => {\n    let valorNutricional;\n    let factors = this.props.factors[this.props.refeicao];\n    let atributos = this.props.atributos;\n    atributos.map(atributo => {\n      let vn_val = 0;\n      cardapio.map(comida => {\n        vn_val = vn_val + foodmap[comida][atributo] * factors[comida];\n      });\n      let vn = [atributo, vn_val];\n      if (valorNutricional) valorNutricional = [valorNutricional, vn];\n      else valorNutricional = vn;\n    });\n    return valorNutricional;\n  };\n\n  calcula_VNs_i = (cardapio, index) => {\n    let valorNutricional;\n    let factors = this.props.factors[index];\n    let atributos = this.props.atributos;\n    atributos.map(atributo => {\n      let vn_val = 0;\n      cardapio.map(comida => {\n        vn_val = vn_val + foodmap[comida][atributo] * factors[comida];\n      });\n      let vn = [atributo, vn_val];\n      if (valorNutricional) valorNutricional = [valorNutricional, vn];\n      else valorNutricional = vn;\n    });\n    return valorNutricional;\n  };\n\n  calcula_VNs = cardapios => {\n    let valorNutricional;\n    cardapios.map((cardapio, index) => {\n      if (valorNutricional)\n        valorNutricional = this.somaAtributos(\n          valorNutricional,\n          this.calcula_VNs_i(cardapio, index)\n        );\n      else valorNutricional = this.calcula_VNs_i(cardapio, index);\n    });\n    this.props.handleInfos(valorNutricional);\n  };\n\n  somaAtributos = (valorNutricional1, valorNutricional2) => {\n    for (let i = 0; i < this.props.atributos.length; i++) {\n      valorNutricional1[i][1] =\n        valorNutricional1[i][1] + valorNutricional2[i][1];\n    }\n    return valorNutricional1;\n  };\n\n  componentDidUpdate = prevProps => {\n    if (prevProps.refeicao !== this.props.refeicao) {\n      this.setState({\n        Disponiveis: this.comidas_restantes(\n          this.props.COMIDAS,\n          this.props.cardapios[this.props.refeicao]\n        ),\n        Cardapio: this.props.cardapios[this.props.refeicao],\n        valorNutricional: this.calcula_VN(\n          this.props.cardapios[this.props.refeicao]\n        ),\n        factors: this.props.factors[this.props.refeicao]\n      });\n    }\n  };\n\n  handleCardapio = cardapio => {\n    this.setState({\n      valorNutricional: this.calcula_VN(cardapio)\n    });\n  };\n\n  generateTable = () => {\n    let Disponiveis = this.state.Disponiveis;\n    let Cardapio = this.state.Cardapio;\n    if (Disponiveis || Cardapio) {\n      let TableDisponiveis = Disponiveis.map(moeda => {\n        return (\n          <Segment.Group compact>\n            <Segment inverted color=\"green\">\n              <center>{moeda}</center>\n            </Segment>\n            <Button.Group>\n              <Button disabled icon>\n                <Icon name=\"angle double left\" />\n              </Button>\n\n              <Button\n                name={moeda}\n                type=\"Ativo\"\n                onClick={this.handleItemClick}\n                icon\n              >\n                <Icon name=\"angle double right\" />\n              </Button>\n            </Button.Group>\n          </Segment.Group>\n        );\n      });\n      let TableCardapio = Cardapio.map(moeda => {\n        return (\n          <Segment.Group compact>\n            <Segment inverted color=\"blue\">\n              <center>{moeda}</center>\n            </Segment>\n            <Button.Group>\n              <Button\n                name={moeda}\n                type=\"Passivo\"\n                onClick={this.handleItemClick}\n                icon\n              >\n                <Icon name=\"angle double left\" />\n              </Button>\n              <Button disabled icon>\n                <Icon name=\"angle double right\" />\n              </Button>\n            </Button.Group>\n          </Segment.Group>\n        );\n      });\n      let tabela = (\n        <div>\n          {\" \"}\n          <Table collapsing celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={6}>\n                  <center>Alimentos disponíveis</center>\n                </Table.HeaderCell>\n                <Table.HeaderCell width={6}>\n                  <center>Cardápio</center>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row textAlign=\"center\">\n                <Table.Cell>{TableDisponiveis}</Table.Cell>\n                <Table.Cell>{TableCardapio}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </div>\n      );\n      return tabela;\n    } else return null;\n  };\n\n  handleItemClick = (e, { direction, name, type }) => {\n    let Disponiveis = this.state.Disponiveis;\n    let Cardapio = this.state.Cardapio;\n    if (type === \"Ativo\") {\n      Disponiveis.splice(Disponiveis.indexOf(name), 1);\n      Cardapio.push(name);\n      this.setState({ Disponiveis: Disponiveis, Cardapio: Cardapio });\n    }\n    if (type === \"Passivo\") {\n      Cardapio.splice(Cardapio.indexOf(name), 1);\n      Disponiveis.push(name);\n      this.setState({ Cardapio: Cardapio, Disponiveis: Disponiveis });\n    }\n    this.handleCardapio(Cardapio);\n    this.props.handleCardapios(this.state.refeicao, Cardapio);\n    this.calcula_VNs(this.props.cardapios);\n  };\n\n  generateChart = () => {\n    let valorNutricional = this.state.valorNutricional;\n    let content;\n    if (valorNutricional) {\n      content = valorNutricional.map(valor => {\n        return (\n          <Table.Row>\n            <Table.Cell>{valor[0]}</Table.Cell>\n            <Table.Cell>{valor[1]}</Table.Cell>\n          </Table.Row>\n        );\n      });\n    }\n    let table = (\n      <Table>\n        <Table.Header>\n          <Table.HeaderCell>Infos locais</Table.HeaderCell>\n          {content}\n        </Table.Header>\n      </Table>\n    );\n    return table;\n  };\n\n  searchFactor = comida => {\n    let factors = this.props.factors[this.props.refeicao];\n    return factors[comida];\n  };\n\n  setFactor = async (comida, event) => {\n    if (event) {\n      let factors = this.props.factors[this.props.refeicao];\n      //console.log(factors);\n      if (factors) {\n      } else {\n        factors = {};\n      }\n      factors[comida] = event.target.value;\n      await new Promise(resolve => {\n        this.setState({ factors: factors }, () => {\n          resolve();\n        });\n      });\n      this.handleCardapio(this.state.Cardapio);\n      this.props.handleFactors(this.props.refeicao, factors);\n      this.calcula_VNs(this.props.cardapios);\n    }\n  };\n\n  gerenateFactor = () => {\n    let cardapio = this.state.Cardapio;\n    let content;\n    if (cardapio) {\n      content = cardapio.map(comida => {\n        return (\n          <Table.Row>\n            <Table.Cell>{comida}</Table.Cell>\n            <Table.Cell>\n              <Input\n                value={this.searchFactor(comida)}\n                onChange={e => this.setFactor(comida, e)}\n              ></Input>\n            </Table.Cell>\n          </Table.Row>\n        );\n      });\n    }\n    let table = (\n      <Table>\n        <Table.Header>\n          <Table.HeaderCell>Alimento</Table.HeaderCell>\n          <Table.HeaderCell>Quantidade (porções)</Table.HeaderCell>\n          {content}\n        </Table.Header>\n      </Table>\n    );\n    return table;\n  };\n\n  render() {\n    let tabela = this.generateTable();\n    let chart = this.generateChart();\n    let fator = this.gerenateFactor();\n    const refeicao = this.props.refeicao;\n    if (tabela) {\n      return (\n        <div>\n          <h2>{refeicaoMap[refeicao]}</h2>\n          <center>{tabela}</center>\n          <br></br>\n          <br></br>\n          <center>{fator}</center>\n          <br></br>\n          <br></br>\n          <center>{chart}</center>\n        </div>\n      );\n    } else return null;\n  }\n}\n\nexport default Refeicao;\n"]},"metadata":{},"sourceType":"module"}