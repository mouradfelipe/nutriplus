{"ast":null,"code":"var _jsxFileName = \"/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/components/FoodSuggestions/Infos.jsx\";\nimport React, { Component } from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nclass Infos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      valorNutricional: this.props.valorNutricional\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.valorNutricional !== prevProps.valorNutricional) {\n        this.setState({\n          valorNutricional: this.props.valorNutricional\n        });\n      }\n    };\n\n    this.generateTable = () => {\n      let table = React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Infos \")), this.state.valorNutricional.map(valor => {\n        return React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, valor[0]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, valor[1]));\n      }));\n      return table;\n    };\n  }\n\n  render() {\n    let table = this.generateTable();\n    return table;\n  }\n\n}\n\nexport default Infos;","map":{"version":3,"sources":["/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/components/FoodSuggestions/Infos.jsx"],"names":["React","Component","Table","Infos","state","valorNutricional","props","componentDidUpdate","prevProps","setState","generateTable","table","map","valor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACNC,MAAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWD;AADvB,KADoB;;AAAA,SAK5BE,kBAL4B,GAKPC,SAAS,IAAI;AAChC,UAAI,KAAKF,KAAL,CAAWD,gBAAX,KAAgCG,SAAS,CAACH,gBAA9C,EAAgE;AAC9D,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,gBAAgB,EAAE,KAAKC,KAAL,CAAWD;AAA/B,SAAd;AACD;AACF,KAT2B;;AAAA,SAW5BK,aAX4B,GAWZ,MAAM;AACpB,UAAIC,KAAK,GACP,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIG,KAAKP,KAAL,CAAWC,gBAAX,CAA4BO,GAA5B,CAAgCC,KAAK,IAAI;AACxC,eACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaA,KAAK,CAAC,CAAD,CAAlB,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaA,KAAK,CAAC,CAAD,CAAlB,CAFF,CADF;AAMD,OAPA,CAJH,CADF;AAeA,aAAOF,KAAP;AACD,KA5B2B;AAAA;;AA6B5BG,EAAAA,MAAM,GAAG;AACP,QAAIH,KAAK,GAAG,KAAKD,aAAL,EAAZ;AACA,WAAOC,KAAP;AACD;;AAhC2B;;AAmC9B,eAAeR,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nclass Infos extends Component {\n  state = {\n    valorNutricional: this.props.valorNutricional\n  };\n\n  componentDidUpdate = prevProps => {\n    if (this.props.valorNutricional !== prevProps.valorNutricional) {\n      this.setState({ valorNutricional: this.props.valorNutricional });\n    }\n  };\n\n  generateTable = () => {\n    let table = (\n      <Table>\n        <Table.Header>\n          <Table.HeaderCell>Infos </Table.HeaderCell>\n        </Table.Header>\n        {this.state.valorNutricional.map(valor => {\n          return (\n            <Table.Row>\n              <Table.Cell>{valor[0]}</Table.Cell>\n              <Table.Cell>{valor[1]}</Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table>\n    );\n    return table;\n  };\n  render() {\n    let table = this.generateTable();\n    return table;\n  }\n}\n\nexport default Infos;\n"]},"metadata":{},"sourceType":"module"}