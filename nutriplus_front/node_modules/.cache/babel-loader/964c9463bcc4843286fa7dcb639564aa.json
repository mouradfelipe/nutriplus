{"ast":null,"code":"var _jsxFileName = \"/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport Login from \"./containers/login_page/login_page\";\nimport Toolbar from \"./components/Navigation/Toolbar/Toolbar\";\nimport Patients from \"./components/Patients/Patients\";\nimport FoodSuggestions from \"./components/FoodSuggestions/FoodSuggestions\";\nimport Main from \"./components/Main/Main\";\nimport Logout from \"./containers/Logout/Logout\";\nimport Subscribe from \"./containers/Subscribe/Subscribe\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isAuthenticated: false\n    };\n\n    this.componentDidMount = async () => {\n      let isAuthenticated = localStorage.getItem(\"stored_auth\") || false;\n\n      if (isAuthenticated === \"1\") {\n        await new Promise(resolve => {\n          this.setState({\n            isAuthenticated: true\n          }, () => {\n            resolve();\n          });\n        });\n      }\n    };\n\n    this.loginHandler = () => {\n      this.setState({\n        isAuthenticated: true\n      });\n    };\n\n    this.logoutHandler = async () => {\n      await new Promise(resolve => {\n        localStorage.setItem(\"stored_token\", \"\");\n        localStorage.setItem(\"stored_refresh\", \"\");\n        localStorage.setItem(\"stored_auth\", false);\n        this.setState({\n          isAuthenticated: false\n        }, () => {\n          resolve();\n        });\n      });\n    };\n  }\n\n  render() {\n    let routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/auth\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        updateLogin: this.loginHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/subscription\",\n      render: props => React.createElement(Subscribe, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n\n    if (this.state.isAuthenticated) {\n      routes = React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/pacientes\",\n        render: props => React.createElement(Patients, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/cardapio\",\n        render: props => React.createElement(FoodSuggestions, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        render: props => React.createElement(Logout, Object.assign({}, props, {\n          updateLogout: this.logoutHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      isAuth: this.state.isAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), routes);\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/App.js"],"names":["React","Component","Route","Switch","withRouter","Redirect","Login","Toolbar","Patients","FoodSuggestions","Main","Logout","Subscribe","App","state","isAuthenticated","componentDidMount","localStorage","getItem","Promise","resolve","setState","loginHandler","logoutHandler","setItem","render","routes","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport Login from \"./containers/login_page/login_page\";\nimport Toolbar from \"./components/Navigation/Toolbar/Toolbar\";\nimport Patients from \"./components/Patients/Patients\";\nimport FoodSuggestions from \"./components/FoodSuggestions/FoodSuggestions\";\nimport Main from \"./components/Main/Main\";\nimport Logout from \"./containers/Logout/Logout\";\nimport Subscribe from \"./containers/Subscribe/Subscribe\";\n\nclass App extends Component {\n  state = { isAuthenticated: false };\n\n  componentDidMount = async () => {\n    let isAuthenticated = localStorage.getItem(\"stored_auth\") || false;\n    if (isAuthenticated === \"1\") {\n      await new Promise(resolve => {\n        this.setState({ isAuthenticated: true }, () => {\n          resolve();\n        });\n      });\n    }\n  };\n\n  loginHandler = () => {\n    this.setState({ isAuthenticated: true });\n  };\n\n  logoutHandler = async () => {\n    await new Promise(resolve => {\n      localStorage.setItem(\"stored_token\", \"\");\n      localStorage.setItem(\"stored_refresh\", \"\");\n      localStorage.setItem(\"stored_auth\", false);\n      this.setState({ isAuthenticated: false }, () => {\n        resolve();\n      });\n    });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/auth\"\n          render={props => <Login {...props} updateLogin={this.loginHandler} />}\n        />\n        <Route\n          path=\"/subscription\"\n          render={props => <Subscribe {...props} />}\n        />\n        <Route path=\"/\" exact component={Main} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.state.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/pacientes\" render={props => <Patients {...props} />} />\n          <Route\n            path=\"/cardapio\"\n            render={props => <FoodSuggestions {...props} />}\n          />\n          <Route\n            path=\"/logout\"\n            render={props => (\n              <Logout {...props} updateLogout={this.logoutHandler} />\n            )}\n          />\n          <Route path=\"/\" exact component={Main} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <Toolbar isAuth={this.state.isAuthenticated} />\n        <br></br>\n        <br></br>\n        <br></br>\n        {routes}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}