{"ast":null,"code":"import _slicedToArray from \"/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/containers/Patients/Register/Register.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Button, Form, Grid, Header, Segment, Input } from \"semantic-ui-react\";\nimport { sendAuthenticatedRequest } from \"../../../utility/httpHelper\";\nimport Paginator from \"../../../utility/paginator\";\nimport classes from \"./Register.module.css\";\n\nconst Register = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dob = _useState4[0],\n        setDob = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        restrictions = _useState6[0],\n        setRestrictions = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        restrictionQuery = _useState8[0],\n        setRestrictionQuery = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        message = _useState10[0],\n        setMessage = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        queryResults = _useState12[0],\n        setQueryResults = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        hasNext = _useState14[0],\n        setHasNext = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        hasPrevious = _useState16[0],\n        setHasPrevious = _useState16[1];\n\n  const searchRef = useRef();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (restrictionQuery === searchRef.current.inputRef.current.value) {\n        if (restrictionQuery !== \"\") {\n          sendAuthenticatedRequest(\"http://localhost:8080/foods/search/\" + restrictionQuery + \"/\", \"get\", message => setMessage(message), info => {\n            setQueryResults(info);\n            setHasNext(info.next !== null);\n            setHasPrevious(false);\n          });\n        } else {\n          setQueryResults(null);\n        }\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [restrictionQuery, searchRef]);\n\n  const clearFields = () => {\n    setName(\"\");\n    setDob(\"\");\n    setRestrictionQuery(\"\");\n    setQueryResults(null);\n    setRestrictions([]);\n  };\n\n  const register = async () => {\n    const day = +dob.slice(0, 2);\n    const month = +dob.slice(3, 5);\n    const year = +dob.slice(6);\n\n    if (day === 0 || month === 0 || month > 12) {\n      setMessage(\"Data inválida\");\n      return;\n    } else if (month < 8 && month % 2 === 1 || month >= 8 && month % 2 === 0) {\n      if (day > 31) {\n        setMessage(\"Data inválida\");\n        return;\n      }\n    } else if (month === 2) {\n      if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {\n        if (day > 29) {\n          setMessage(\"Data inválida\");\n          return;\n        }\n      } else {\n        if (day > 28) {\n          setMessage(\"Data inválida\");\n          return;\n        }\n      }\n    } else if (day > 30) {\n      setMessage(\"Data inválida\");\n      return;\n    }\n\n    if (name.length === 0) {\n      setMessage(\"Não há nome!\");\n      return;\n    }\n\n    sendAuthenticatedRequest(\"http://localhost:8080/patients/add-new/\", \"post\", message => setMessage(message), () => {\n      setMessage(\"Cadastro realizado com sucesso!\");\n      clearFields();\n    }, JSON.stringify({\n      patient: name,\n      date_of_birth: dob,\n      food_restrictions: restrictions.reduce((total, actual, index, arr) => total + actual.id + (index === arr.length - 1 ? \"\" : \"&\"), \"\")\n    })); //   const res2 = await fetch(\"http://localhost:8080/user/token/refresh/\", {\n    //     method: \"post\",\n    //     body: JSON.stringify({\n    //       refresh: localStorage.getItem(\"stored_refresh\")\n    //     }),\n    //     headers: new Headers({\n    //       \"Content-Type\": \"application/json\"\n    //     })\n    //   });\n    //   const info2 = await res2.json();\n    //   console.log(info2);\n    //   localStorage.setItem(\"stored_token\", info2.access);\n    //   this.setState({ message: \"Sessão restaurada!\" });\n  };\n\n  const handlefoodClick = food => {\n    setRestrictions([...restrictions, food]);\n    setRestrictionQuery(\"\");\n    setQueryResults(null);\n  };\n\n  const removeRestriction = food => {\n    setRestrictions([...restrictions].filter(restrFood => restrFood !== food));\n  };\n\n  return React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: \"10vh\"\n    },\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Insira as informa\\xE7\\xF5es do paciente abaixo\"), React.createElement(Form, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    stacked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    icon: \"id card outline\",\n    iconPosition: \"left\",\n    placeholder: \"Nome do paciente\",\n    onChange: event => {\n      setName(event.target.value);\n      setMessage(\"\");\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"calendar\",\n    iconPosition: \"left\",\n    placeholder: \"DD/MM/YYYY\",\n    value: dob // TODO: make this update function foolproof\n    ,\n    onChange: event => {\n      const inputDob = event.target.value;\n      const actualIndex = dob.length;\n\n      if (inputDob.length > actualIndex) {\n        const lastChar = inputDob[actualIndex];\n\n        if (lastChar < \"0\" || lastChar > \"9\") {\n          return;\n        }\n\n        if (actualIndex === 2 || actualIndex === 5) {\n          // First month digit or year digit was just filled\n          setDob(inputDob.slice(0, -1) + \"/\" + inputDob.slice(-1));\n          return;\n        }\n\n        if (actualIndex === 10) {\n          // Date should be finished\n          return;\n        }\n      } // If I didn't return up until now, I should just set state to the input\n\n\n      setDob(inputDob);\n      setMessage(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Input, {\n    ref: searchRef,\n    icon: \"search\",\n    iconPosition: \"left\",\n    placeholder: \"Restri\\xE7\\xF5es alimentares (opcional)\",\n    onChange: async event => {\n      setRestrictionQuery(event.target.value);\n      setMessage(\"\");\n    },\n    value: restrictionQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), restrictions.length === 0 ? null : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, restrictions.map(food => React.createElement(\"li\", {\n    className: classes.Food,\n    key: food.id,\n    onClick: () => removeRestriction(food),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, food.food_name))), queryResults && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(Paginator, {\n    queryResults: queryResults,\n    filter: food => !restrictions.some(state_food => state_food.food_name === food.food_name),\n    listElementMap: obj => React.createElement(\"p\", {\n      key: obj.id,\n      className: classes.Food,\n      onClick: () => handlefoodClick(obj),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, obj.food_name),\n    setResults: setQueryResults,\n    setHasNext: setHasNext,\n    setHasPrevious: setHasPrevious,\n    setMessage: setMessage,\n    hasPrevious: hasPrevious,\n    hasNext: hasNext,\n    buttonSize: \"mini\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  })), React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Registrar paciente\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, message)))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/containers/Patients/Register/Register.js"],"names":["React","useState","useRef","useEffect","Button","Form","Grid","Header","Segment","Input","sendAuthenticatedRequest","Paginator","classes","Register","props","name","setName","dob","setDob","restrictions","setRestrictions","restrictionQuery","setRestrictionQuery","message","setMessage","queryResults","setQueryResults","hasNext","setHasNext","hasPrevious","setHasPrevious","searchRef","timer","setTimeout","current","inputRef","value","info","next","clearTimeout","clearFields","register","day","slice","month","year","length","JSON","stringify","patient","date_of_birth","food_restrictions","reduce","total","actual","index","arr","id","handlefoodClick","food","removeRestriction","filter","restrFood","height","maxWidth","event","target","inputDob","actualIndex","lastChar","map","Food","food_name","some","state_food","obj"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Button, Form, Grid, Header, Segment, Input } from \"semantic-ui-react\";\nimport { sendAuthenticatedRequest } from \"../../../utility/httpHelper\";\nimport Paginator from \"../../../utility/paginator\";\nimport classes from \"./Register.module.css\";\n\nconst Register = props => {\n  const [name, setName] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [restrictions, setRestrictions] = useState([]);\n  const [restrictionQuery, setRestrictionQuery] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [queryResults, setQueryResults] = useState(null);\n  const [hasNext, setHasNext] = useState(false);\n  const [hasPrevious, setHasPrevious] = useState(false);\n\n  const searchRef = useRef();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (restrictionQuery === searchRef.current.inputRef.current.value) {\n        if (restrictionQuery !== \"\") {\n          sendAuthenticatedRequest(\n            \"http://localhost:8080/foods/search/\" + restrictionQuery + \"/\",\n            \"get\",\n            message => setMessage(message),\n            info => {\n              setQueryResults(info);\n              setHasNext(info.next !== null);\n              setHasPrevious(false);\n            }\n          );\n        } else {\n          setQueryResults(null);\n        }\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [restrictionQuery, searchRef]);\n\n  const clearFields = () => {\n    setName(\"\");\n    setDob(\"\");\n    setRestrictionQuery(\"\");\n    setQueryResults(null);\n    setRestrictions([]);\n  };\n\n  const register = async () => {\n    const day = +dob.slice(0, 2);\n    const month = +dob.slice(3, 5);\n    const year = +dob.slice(6);\n    if (day === 0 || month === 0 || month > 12) {\n      setMessage(\"Data inválida\");\n      return;\n    } else if (\n      (month < 8 && month % 2 === 1) ||\n      (month >= 8 && month % 2 === 0)\n    ) {\n      if (day > 31) {\n        setMessage(\"Data inválida\");\n        return;\n      }\n    } else if (month === 2) {\n      if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\n        if (day > 29) {\n          setMessage(\"Data inválida\");\n          return;\n        }\n      } else {\n        if (day > 28) {\n          setMessage(\"Data inválida\");\n          return;\n        }\n      }\n    } else if (day > 30) {\n      setMessage(\"Data inválida\");\n      return;\n    }\n    if (name.length === 0) {\n      setMessage(\"Não há nome!\");\n      return;\n    }\n    sendAuthenticatedRequest(\n      \"http://localhost:8080/patients/add-new/\",\n      \"post\",\n      message => setMessage(message),\n      () => {\n        setMessage(\"Cadastro realizado com sucesso!\");\n        clearFields();\n      },\n      JSON.stringify({\n        patient: name,\n        date_of_birth: dob,\n        food_restrictions: restrictions.reduce(\n          (total, actual, index, arr) =>\n            total + actual.id + (index === arr.length - 1 ? \"\" : \"&\"),\n          \"\"\n        )\n      })\n    );\n    //   const res2 = await fetch(\"http://localhost:8080/user/token/refresh/\", {\n    //     method: \"post\",\n    //     body: JSON.stringify({\n    //       refresh: localStorage.getItem(\"stored_refresh\")\n    //     }),\n    //     headers: new Headers({\n    //       \"Content-Type\": \"application/json\"\n    //     })\n    //   });\n    //   const info2 = await res2.json();\n    //   console.log(info2);\n    //   localStorage.setItem(\"stored_token\", info2.access);\n    //   this.setState({ message: \"Sessão restaurada!\" });\n  };\n\n  const handlefoodClick = food => {\n    setRestrictions([...restrictions, food]);\n    setRestrictionQuery(\"\");\n    setQueryResults(null);\n  };\n\n  const removeRestriction = food => {\n    setRestrictions([...restrictions].filter(restrFood => restrFood !== food));\n  };\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"10vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Insira as informações do paciente abaixo\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              icon=\"id card outline\"\n              iconPosition=\"left\"\n              placeholder=\"Nome do paciente\"\n              onChange={event => {\n                setName(event.target.value);\n                setMessage(\"\");\n              }}\n              value={name}\n            />\n            <Form.Input\n              icon=\"calendar\"\n              iconPosition=\"left\"\n              placeholder=\"DD/MM/YYYY\"\n              value={dob}\n              // TODO: make this update function foolproof\n              onChange={event => {\n                const inputDob = event.target.value;\n                const actualIndex = dob.length;\n                if (inputDob.length > actualIndex) {\n                  const lastChar = inputDob[actualIndex];\n                  if (lastChar < \"0\" || lastChar > \"9\") {\n                    return;\n                  }\n                  if (actualIndex === 2 || actualIndex === 5) {\n                    // First month digit or year digit was just filled\n                    setDob(inputDob.slice(0, -1) + \"/\" + inputDob.slice(-1));\n                    return;\n                  }\n                  if (actualIndex === 10) {\n                    // Date should be finished\n                    return;\n                  }\n                }\n                // If I didn't return up until now, I should just set state to the input\n                setDob(inputDob);\n                setMessage(\"\");\n              }}\n            />\n            <Form.Field>\n              <Input\n                ref={searchRef}\n                icon=\"search\"\n                iconPosition=\"left\"\n                placeholder=\"Restrições alimentares (opcional)\"\n                onChange={async event => {\n                  setRestrictionQuery(event.target.value);\n                  setMessage(\"\");\n                }}\n                value={restrictionQuery}\n              />\n            </Form.Field>\n            {restrictions.length === 0 ? null : (\n              <ul>\n                {restrictions.map(food => (\n                  <li\n                    className={classes.Food}\n                    key={food.id}\n                    onClick={() => removeRestriction(food)}\n                  >\n                    {food.food_name}\n                  </li>\n                ))}\n              </ul>\n            )}\n            {queryResults && (\n              <React.Fragment>\n                <hr />\n                <Paginator\n                  queryResults={queryResults}\n                  filter={food =>\n                    !restrictions.some(\n                      state_food => state_food.food_name === food.food_name\n                    )\n                  }\n                  listElementMap={obj => (\n                    <p\n                      key={obj.id}\n                      className={classes.Food}\n                      onClick={() => handlefoodClick(obj)}\n                    >\n                      {obj.food_name}\n                    </p>\n                  )}\n                  setResults={setQueryResults}\n                  setHasNext={setHasNext}\n                  setHasPrevious={setHasPrevious}\n                  setMessage={setMessage}\n                  hasPrevious={hasPrevious}\n                  hasNext={hasNext}\n                  buttonSize=\"mini\"\n                />\n              </React.Fragment>\n            )}\n            <Button color=\"teal\" fluid size=\"large\" onClick={register}>\n              Registrar paciente\n            </Button>\n            <p>{message}</p>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}