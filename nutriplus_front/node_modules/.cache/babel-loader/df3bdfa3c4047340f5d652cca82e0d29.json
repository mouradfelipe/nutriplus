{"ast":null,"code":"var _jsxFileName = \"/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/containers/Patients/PatientRecord/PatientRecordCreator/PatientRecordCreator.js\";\nimport React, { Component } from \"react\";\nimport { sendAuthenticatedRequest } from \"../../../../utility/httpHelper\";\nimport { Button, Form, Grid, Header, Segment, TextArea } from \"semantic-ui-react\";\n\nclass PatientRecordCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      patient: null,\n      weight: \"\",\n      height: \"\",\n      obs: \"\",\n      message: null\n    };\n\n    this.componentDidMount = async () => {\n      const params = this.props.match.params;\n      sendAuthenticatedRequest(\"http://localhost:8080/patients/get-info/\" + params[\"id\"] + \"/\", \"get\", message => this.setState({\n        message: message\n      }), info => this.setState({\n        patient: info,\n        message: null\n      }));\n    };\n\n    this.sendForm = async () => {\n      const params = this.props.match.params;\n      const BMI = +this.state.weight / (+this.state.height * +this.state.height);\n\n      if (+this.state.weight > 0.1 && +this.state.height > 0.1 && +this.state.weight < 1000 && +this.state.height < 3) {\n        sendAuthenticatedRequest(\"http://localhost:8080/patients/add-record/\" + params[\"id\"] + \"/\", \"post\", message => this.setState({\n          message: message\n        }), () => this.setState({\n          message: \"Ficha salva com sucesso!\",\n          weight: \"\",\n          height: \"\",\n          obs: \"\"\n        }), JSON.stringify({\n          corporal_mass: (+this.state.weight).toFixed(2),\n          height: (+this.state.height).toFixed(2),\n          BMI: BMI.toFixed(2),\n          observations: this.state.obs\n        }));\n      } else {\n        this.setState({\n          message: \"Valores de altura ou peso invÃ¡lidos!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Paciente: \", this.state.patient ? this.state.patient.name : null), React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: \"10vh\"\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Insira as informa\\xE7\\xF5es do paciente abaixo\"), React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      icon: \"weight\",\n      iconPosition: \"left\",\n      placeholder: \"Peso (em kg). Ex: 51.5\",\n      onChange: event => {\n        for (const char of event.target.value) {\n          if ((char < \"0\" || char > \"9\") && char !== \".\") return;\n        }\n\n        this.setState({\n          weight: event.target.value,\n          message: \"\"\n        });\n      },\n      value: this.state.weight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      icon: \"long arrow alternate up\",\n      iconPosition: \"left\",\n      placeholder: \"Altura(em m). Ex: 1.81\",\n      value: this.state.height,\n      onChange: event => {\n        for (const char of event.target.value) if ((char < \"0\" || char > \"9\") && char !== \".\") return;\n\n        this.setState({\n          height: event.target.value,\n          message: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      placeholder: \"Observa\\xE7\\xF5es\",\n      onChange: event => {\n        this.setState({\n          obs: event.target.value,\n          message: \"\"\n        });\n      },\n      value: this.state.obs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      onClick: this.sendForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Adicionar ficha\"), this.state.message && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.message))))));\n  }\n\n}\n\nexport default PatientRecordCreator;","map":{"version":3,"sources":["/home/omsf/Documentos/2.ITA/1. CES-28/3. Pratica/nutriplus/nutriplus_front/src/containers/Patients/PatientRecord/PatientRecordCreator/PatientRecordCreator.js"],"names":["React","Component","sendAuthenticatedRequest","Button","Form","Grid","Header","Segment","TextArea","PatientRecordCreator","state","patient","weight","height","obs","message","componentDidMount","params","props","match","setState","info","sendForm","BMI","JSON","stringify","corporal_mass","toFixed","observations","render","name","maxWidth","event","char","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,QANF,QAOO,mBAPP;;AASA,MAAMC,oBAAN,SAAmCR,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CS,KAD2C,GACnC;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,MAAM,EAAE,EAAzB;AAA6BC,MAAAA,MAAM,EAAE,EAArC;AAAyCC,MAAAA,GAAG,EAAE,EAA9C;AAAkDC,MAAAA,OAAO,EAAE;AAA3D,KADmC;;AAAA,SAG3CC,iBAH2C,GAGvB,YAAY;AAC9B,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,MAAhC;AACAf,MAAAA,wBAAwB,CACtB,6CAA6Ce,MAAM,CAAC,IAAD,CAAnD,GAA4D,GADtC,EAEtB,KAFsB,EAGtBF,OAAO,IACL,KAAKK,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAEA;AADG,OAAd,CAJoB,EAOtBM,IAAI,IAAI,KAAKD,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEU,IAAX;AAAiBN,QAAAA,OAAO,EAAE;AAA1B,OAAd,CAPc,CAAxB;AASD,KAd0C;;AAAA,SAgB3CO,QAhB2C,GAgBhC,YAAY;AACrB,YAAML,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBF,MAAhC;AACA,YAAMM,GAAG,GAAG,CAAC,KAAKb,KAAL,CAAWE,MAAZ,IAAsB,CAAC,KAAKF,KAAL,CAAWG,MAAZ,GAAqB,CAAC,KAAKH,KAAL,CAAWG,MAAvD,CAAZ;;AACA,UACE,CAAC,KAAKH,KAAL,CAAWE,MAAZ,GAAqB,GAArB,IACA,CAAC,KAAKF,KAAL,CAAWG,MAAZ,GAAqB,GADrB,IAEA,CAAC,KAAKH,KAAL,CAAWE,MAAZ,GAAqB,IAFrB,IAGA,CAAC,KAAKF,KAAL,CAAWG,MAAZ,GAAqB,CAJvB,EAKE;AACAX,QAAAA,wBAAwB,CACtB,+CAA+Ce,MAAM,CAAC,IAAD,CAArD,GAA8D,GADxC,EAEtB,MAFsB,EAGtBF,OAAO,IACL,KAAKK,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAEA;AADG,SAAd,CAJoB,EAOtB,MACE,KAAKK,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAE,0BADG;AAEZH,UAAAA,MAAM,EAAE,EAFI;AAGZC,UAAAA,MAAM,EAAE,EAHI;AAIZC,UAAAA,GAAG,EAAE;AAJO,SAAd,CARoB,EActBU,IAAI,CAACC,SAAL,CAAe;AACbC,UAAAA,aAAa,EAAE,CAAC,CAAC,KAAKhB,KAAL,CAAWE,MAAb,EAAqBe,OAArB,CAA6B,CAA7B,CADF;AAEbd,UAAAA,MAAM,EAAE,CAAC,CAAC,KAAKH,KAAL,CAAWG,MAAb,EAAqBc,OAArB,CAA6B,CAA7B,CAFK;AAGbJ,UAAAA,GAAG,EAAEA,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAHQ;AAIbC,UAAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWI;AAJZ,SAAf,CAdsB,CAAxB;AAqBD,OA3BD,MA2BO;AACL,aAAKM,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD;AACF,KAnD0C;AAAA;;AAqD3Cc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKnB,KAAL,CAAWC,OAAX,GAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAmBmB,IAAxC,GAA+C,IAA9D,CADF,EAEE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,EAAE;AAAEjB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,aAAa,EAAC,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,YAAY,EAAC,MAFf;AAGE,MAAA,WAAW,EAAC,wBAHd;AAIE,MAAA,QAAQ,EAAEC,KAAK,IAAI;AACjB,aAAK,MAAMC,IAAX,IAAmBD,KAAK,CAACE,MAAN,CAAaC,KAAhC,EAAuC;AACrC,cAAI,CAACF,IAAI,GAAG,GAAP,IAAcA,IAAI,GAAG,GAAtB,KAA8BA,IAAI,KAAK,GAA3C,EAAgD;AACjD;;AACD,aAAKb,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAEoB,KAAK,CAACE,MAAN,CAAaC,KAAvB;AAA8BpB,UAAAA,OAAO,EAAE;AAAvC,SAAd;AACD,OATH;AAUE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,MAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAaE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,yBADP;AAEE,MAAA,YAAY,EAAC,MAFf;AAGE,MAAA,WAAW,EAAC,wBAHd;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,MAJpB;AAKE,MAAA,QAAQ,EAAEmB,KAAK,IAAI;AACjB,aAAK,MAAMC,IAAX,IAAmBD,KAAK,CAACE,MAAN,CAAaC,KAAhC,EACE,IAAI,CAACF,IAAI,GAAG,GAAP,IAAcA,IAAI,GAAG,GAAtB,KAA8BA,IAAI,KAAK,GAA3C,EAAgD;;AAClD,aAAKb,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAAEmB,KAAK,CAACE,MAAN,CAAaC,KAAvB;AAA8BpB,UAAAA,OAAO,EAAE;AAAvC,SAAd;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAwBE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAC,mBADd;AAEE,MAAA,QAAQ,EAAEiB,KAAK,IAAI;AACjB,aAAKZ,QAAL,CAAc;AACZN,UAAAA,GAAG,EAAEkB,KAAK,CAACE,MAAN,CAAaC,KADN;AAEZpB,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAPH;AAQE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,GARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EAkCE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,MAAA,OAAO,EAAE,KAAKQ,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAlCF,EAqCG,KAAKZ,KAAL,CAAWK,OAAX,IAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWK,OAAf,CArCzB,CADF,CAJF,CALF,CAFF,CADF;AAyDD;;AA/G0C;;AAkH7C,eAAeN,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { sendAuthenticatedRequest } from \"../../../../utility/httpHelper\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  TextArea\n} from \"semantic-ui-react\";\n\nclass PatientRecordCreator extends Component {\n  state = { patient: null, weight: \"\", height: \"\", obs: \"\", message: null };\n\n  componentDidMount = async () => {\n    const params = this.props.match.params;\n    sendAuthenticatedRequest(\n      \"http://localhost:8080/patients/get-info/\" + params[\"id\"] + \"/\",\n      \"get\",\n      message =>\n        this.setState({\n          message: message\n        }),\n      info => this.setState({ patient: info, message: null })\n    );\n  };\n\n  sendForm = async () => {\n    const params = this.props.match.params;\n    const BMI = +this.state.weight / (+this.state.height * +this.state.height);\n    if (\n      +this.state.weight > 0.1 &&\n      +this.state.height > 0.1 &&\n      +this.state.weight < 1000 &&\n      +this.state.height < 3\n    ) {\n      sendAuthenticatedRequest(\n        \"http://localhost:8080/patients/add-record/\" + params[\"id\"] + \"/\",\n        \"post\",\n        message =>\n          this.setState({\n            message: message\n          }),\n        () =>\n          this.setState({\n            message: \"Ficha salva com sucesso!\",\n            weight: \"\",\n            height: \"\",\n            obs: \"\"\n          }),\n        JSON.stringify({\n          corporal_mass: (+this.state.weight).toFixed(2),\n          height: (+this.state.height).toFixed(2),\n          BMI: BMI.toFixed(2),\n          observations: this.state.obs\n        })\n      );\n    } else {\n      this.setState({\n        message: \"Valores de altura ou peso invÃ¡lidos!\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Paciente: {this.state.patient ? this.state.patient.name : null}</h4>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"10vh\" }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Insira as informaÃ§Ãµes do paciente abaixo\n            </Header>\n            <Form size=\"large\">\n              <Segment stacked>\n                <Form.Input\n                  icon=\"weight\"\n                  iconPosition=\"left\"\n                  placeholder=\"Peso (em kg). Ex: 51.5\"\n                  onChange={event => {\n                    for (const char of event.target.value) {\n                      if ((char < \"0\" || char > \"9\") && char !== \".\") return;\n                    }\n                    this.setState({ weight: event.target.value, message: \"\" });\n                  }}\n                  value={this.state.weight}\n                />\n                <Form.Input\n                  icon=\"long arrow alternate up\"\n                  iconPosition=\"left\"\n                  placeholder=\"Altura(em m). Ex: 1.81\"\n                  value={this.state.height}\n                  onChange={event => {\n                    for (const char of event.target.value)\n                      if ((char < \"0\" || char > \"9\") && char !== \".\") return;\n                    this.setState({ height: event.target.value, message: \"\" });\n                  }}\n                />\n                <TextArea\n                  placeholder=\"ObservaÃ§Ãµes\"\n                  onChange={event => {\n                    this.setState({\n                      obs: event.target.value,\n                      message: \"\"\n                    });\n                  }}\n                  value={this.state.obs}\n                />\n                <Button color=\"teal\" fluid size=\"large\" onClick={this.sendForm}>\n                  Adicionar ficha\n                </Button>\n                {this.state.message && <p>{this.state.message}</p>}\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default PatientRecordCreator;\n"]},"metadata":{},"sourceType":"module"}